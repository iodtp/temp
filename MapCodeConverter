// ==UserScript==
// @name         Convert map code to new maps
// @namespace    http://tampermonkey.net/
// @description  Convert map code to new maps
// @author       Iodized Salt
// @version      1.0
// @match        https://tagpro.koalabeast.com/mapTest

// @grant        none
// ==/UserScript==

(function() {
    'use strict';
    console.log("hi");
    const map = [['1.4','1','1','1','1','1','1','1','1','1','1.3','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0'],['1','1.2','2','2','2','2','2','2','2','1.1','1','1','1','1','2','2','2','2','12','12','12','2','2','2','2','1','1','0','0','0','0','0','0','0','0'],['1','2','2','5','2','2','2','2','2','2','2','2','2','2','2','2','2','2','12','12','12','2','14','2','2','2','1','1','0','0','0','0','0','0','0'],['1','2','5','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','12','12','12','2','2','2','2','2','2','1','0','0','0','0','0','0','0'],['1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','12','12','12','2','2','2','2','2','2','1','0','0','0','0','0','0','0'],['1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','12','12','12','2','2','2','2','2','2','1','0','0','0','0','0','0','0'],['1','2','2','2','2','2','1.4','1','1','1.3','2','2','2','2','2','2','2','2','12','12','12','2','2','2','2','15','2','1','1.3','0','0','0','0','0','0'],['1','2','2','2','2','2','1','13.1','2','2','2','2','2','2','2','2','2','2','12','12','12','2','2','2','2','2','2','1.1','1','1','0','0','0','0','0'],['1','2','2','2','2','2','1','2','2','2','2','2','2','2','2','2','1','1','1','1','1','1.3','2','2','2','2','2','2','2','1','0','0','0','0','0'],['1','1.3','2','2','2','2','1','2','2','2','2','2','2','2','2','2','1','25','25','1','0','1','2','2','2','2','2','2','2','1','0','0','0','0','0'],['1.1','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','1','9.3','9.3','1','1','1','2','2','2','2','2','2','2','1','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','11','18','18','11','11','2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','11','18','18','11','11','2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','11','18','18','11','11','2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['0','1','1.3','2','2','2','2','2','2','2','2','2','2','2','2','2','11','18','18','11','11','2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['0','1.1','1','2','2','2','2','2','2','2','2','2','1','2','2','2','11','18','18','11','11','2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['0','0','1','2','2','2','2','2','2','2','2','2','2','9.2','2','2','11','18','18','11','11','2','1','1','2','2','2','2','2','1','0','0','0','0','0'],['0','0','1','1','1','2','2','2','2','2','2','2','2','2','9.2','2','11','18','18','11','11','2','2','2','2','2','2','1.4','1','1','0','0','0','0','0'],['0','0','0','0','1','2','5','2','2','2','2','2','2','2','2','1','1','18','18','11','11','2','2','2','2','2','2','1','10','1','0','0','0','0','0'],['0','0','0','1.4','1','2','2','2','2','2','2','2','2','2','2','2','1.1','1.3','18','11','11','2','2','2','8','2','1.4','1','1','1.2','0','0','0','0','0'],['0','0','1.4','1','1.2','2','2','2','2','2','2','2','2','2','2','8','2','1.1','1','1','1','1','1','1','1','1','1','1.2','0','0','0','0','0','0','0'],['0','0','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','0','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','1.1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','0','1','2','2','2','2','2','2','1.3','2','2','2','2','2','2','2','2','2','1','1.3','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','1.4','1','2','2','2','2','2','2','1.2','2','2','2','2','2','2','2','2','2','1.1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','1','1.2','2','2','2','2','2','2','2','2','2','2','1.3','2','2','2','2','2','8','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','2','2','2','2','1','1.3','2','2','2','2','2','1','1.3','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','2','2','2','2','1','7','2','2','2','2','2','1.1','1','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','16','2','2','2','1','7','2','2','6.22','2','2','10','1','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','2','2','2','2','1','7','2','2','2','2','2','1.4','1','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','2','2','2','2','1','1.2','2','2','2','2','2','1','1.2','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','1','1.3','2','2','2','2','2','2','2','2','2','2','1.2','2','2','2','2','2','8','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','1.1','1','2','2','2','2','2','2','1.3','2','2','2','2','2','2','2','2','2','1.4','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','0','1','2','2','2','2','2','2','1.2','2','2','2','2','2','2','2','2','2','1','1.2','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','0','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','1.4','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','0','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],['0','0','1.1','1','1.3','2','2','2','2','2','2','2','2','2','2','8','2','1.4','1','1','1','1','1','1','1','1','1','1.3','0','0','0','0','0','0','0'],['0','0','0','1.1','1','2','2','2','2','2','2','2','2','2','2','2','1.4','1.2','17','12','12','2','2','2','8','2','1.1','1','1','1.3','0','0','0','0','0'],['0','0','0','0','1','2','5','2','2','2','2','2','2','2','2','1','1','17','17','12','12','2','2','2','2','2','2','1','10','1','0','0','0','0','0'],['0','0','1','1','1','2','2','2','2','2','2','2','2','2','9.3','2','12','17','17','12','12','2','2','2','2','2','2','1.1','1','1','0','0','0','0','0'],['0','0','1','2','2','2','2','2','2','2','2','2','2','9.3','2','2','12','17','17','12','12','2','1','1','2','2','2','2','2','1','0','0','0','0','0'],['0','1.4','1','2','2','2','2','2','2','2','2','2','1','2','2','2','12','17','17','12','12','2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['0','1','1.2','2','2','2','2','2','2','2','2','2','2','2','2','2','12','17','17','12','12','2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','12','17','17','12','12','2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','12','17','17','12','12','2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['0','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','12','17','17','12','12','2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['1.4','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','1','9.2','9.2','1','1','1','2','2','2','2','2','2','2','1','0','0','0','0','0'],['1','1.2','2','2','2','2','1','2','2','2','2','2','2','2','2','2','1','24','24','1','0','1','2','2','2','2','2','2','2','1','0','0','0','0','0'],['1','2','2','2','2','2','1','2','2','2','2','2','2','2','2','2','1','1','1','1','1','1.2','2','2','2','2','2','2','2','1','0','0','0','0','0'],['1','2','2','2','2','2','1','13.1','2','2','2','2','2','2','2','2','2','2','11','11','11','2','2','2','2','2','2','1.4','1','1','0','0','0','0','0'],['1','2','2','2','2','2','1.1','1','1','1.2','2','2','2','2','2','2','2','2','11','11','11','2','2','2','2','14','2','1','1.2','0','0','0','0','0','0'],['1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','11','11','11','2','2','2','2','2','2','1','0','0','0','0','0','0','0'],['1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','11','11','11','2','2','2','2','2','2','1','0','0','0','0','0','0','0'],['1','2','5','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','11','11','11','2','2','2','2','2','2','1','0','0','0','0','0','0','0'],['1','2','2','5','2','2','2','2','2','2','2','2','2','2','2','2','2','2','11','11','11','2','15','2','2','2','1','1','0','0','0','0','0','0','0'],['1','1.3','2','2','2','2','2','2','2','1.4','1','1','1','1','2','2','2','2','11','11','11','2','2','2','2','1','1','0','0','0','0','0','0','0','0'],['1.1','1','1','1','1','1','1','1','1','1','1.2','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0']];

    //const map = [['1','1', '1'], ['1','1','1']];

    const map1 = [];
    const regex = /(^1[.].*$)|(^1$)/
    for(let i = 0; i < map.length; i++){
        const row = [];
        for(let j = 0; j < map[i].length; j++){
            let returnVal = "";
            const corners = ['5','5','5','5'];
            switch(map[i][j]){
                case '1': //full wall
                    returnVal = '1.';
                    //top wall
                    if(j == 0 || !regex.test(map[i][j-1])){
                        returnVal += '5';
                    }
                    else {
                        returnVal += '0';
                    }
                    //right wall
                    if(i == map.length-1 || !regex.test(map[i+1][j])){
                        returnVal += '5';
                    }
                    else {
                        returnVal += '0';
                    }
                    //bottom wall
                    if(j == map[i].length-1 || !regex.test(map[i][j+1])){
                        returnVal += '5';
                    }
                    else {
                        returnVal += '0';
                    }
                    //left wall
                    if(i == 0 || !regex.test(map[i-1][j])){
                        returnVal += '5';
                    }
                    else {
                        returnVal += '0';
                    }


                    row.push( returnVal);
                    break;
                case '1.1':
                    /*returnVal = '1.1';
                    //left
                    if(i == 0 || !regex.test(map[i-1][j])){
                        returnVal += '5';
                    }
                    else {
                        returnVal += '0';
                    }
                    //bottom wall
                    if(j == map[i].length-1 || !regex.test(map[i][j+1])){
                        returnVal += '5';
                    }
                    else {
                        returnVal += '0';
                    }

                    //corner
                    returnVal += '0'; //TODO
                    row.push(returnVal);*/
                    row.push('1.1000');
                    break;
                case '1.2':
                    row.push( '1.2000');
                    break;
                case '1.3':
                    row.push( '1.3000');
                    break;
                case '1.4':
                    row.push( '1.4000');
                    break;
                default:
                    row.push( map[i][j]);
            }
        }
        map1.push(row);
    }

    console.log(JSON.stringify(map1));

    const imgPath = 'https://raw.githubusercontent.com/iodtp/temp/refs/heads/main/mtBad.png';
    const squareSize = 40;
    const squares = []; // Array to store the data URLs of the squares

    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d', { willReadFrequently: true });
    const img = new Image();
    img.crossOrigin = "Anonymous"; //deal with CORS
    img.src = imgPath;

    img.onload = () => {
        const imgWidth = img.width;
        const imgHeight = img.height;

        canvas.width = imgWidth;
        canvas.height = imgHeight;
        ctx.drawImage(img, 0, 0);

        const cols = Math.floor(imgWidth / squareSize);
        const rows = Math.floor(imgHeight / squareSize);

        for (let row = 0; row < rows; row++) {
            for (let col = 0; col < cols; col++) {
                const x = col * squareSize;
                const y = row * squareSize;

                const imageData = ctx.getImageData(x, y, squareSize, squareSize);

                // Creating a new canvas for each square
                const newCanvas = document.createElement('canvas');
                newCanvas.width = squareSize;
                newCanvas.height = squareSize;
                const newCtx = newCanvas.getContext('2d');
                newCtx.putImageData(imageData, 0, 0);

                // Convert the new canvas to a data URL and store it in the array
                const dataURL = newCanvas.toDataURL();
                const img = new Image()
                img.src = dataURL;
                img.style.padding = '5px';
                squares.push(img);
                // Create the text element
                const hoverText = document.createElement('div');
                hoverText.textContent = `${row}`;
                hoverText.style.position = 'absolute';
                hoverText.style.backgroundColor = 'rgba(0, 0, 0, 0.75)';
                hoverText.style.color = 'white';
                hoverText.style.padding = '5px';
                hoverText.style.borderRadius = '5px';
                hoverText.style.display = 'none'; // Initially hidden

                // Add the text element to the DOM
                document.body.appendChild(hoverText);

                // Add mouseover event to show the text when hovering over the image
                img.addEventListener('mouseenter', (event) => {
                    hoverText.style.display = 'block';
                    hoverText.style.left = event.pageX + 'px';  // Set text position near the mouse
                    hoverText.style.top = event.pageY + 'px';
                });

                // Add mouseout event to hide the text when not hovering
                img.addEventListener('mouseleave', () => {
                    hoverText.style.display = 'none';
                });
            }
        }
        for(let i = 0; i<squares.length; i++){
            document.body.appendChild(squares[i]);
            squares[i]
        }
    }

})();
